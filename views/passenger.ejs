<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Scrolling Nav - Start Bootstrap Template</title>
    <link rel="icon" type="image/x-icon" href="/assets/favicon.ico" />

    <!-- âœ… Bootstrap 5 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="/css/styles.css" rel="stylesheet" />
    <style>
      /* General Container */
.payment-summary {
  max-height: 450px; /* Set a max-height for the container to prevent excessive height */
  overflow-y: auto; /* Enable scrolling if content overflows */
  padding: 10px;
}

/* Tighten the spacing of details */
.payment-summary p {
  margin-bottom: 0.5rem;
}

/* Reduce padding in the summary container */
.payment-summary .border {
  padding: 1rem;
}

/* Collapsible section for each passenger's details */
.payment-summary .passenger-details {
  display: none;
  padding: 10px;
  border-top: 1px solid #ddd;
}

/* Show/Hide when the passenger item is clicked */
.payment-summary .passenger-item.active .passenger-details {
  display: block;
}

/* Button style for expanding details */
.payment-summary .expand-btn {
  font-size: 12px;
  color: #007bff;
  cursor: pointer;
  text-align: center;
  padding-top: 5px;
}

/* Mobile responsive for small screens */
@media (max-width: 576px) {
  .payment-summary .border {
    padding: 0.8rem;
  }

  .payment-summary .step-title {
    font-size: 14px;
  }

  .payment-summary h4 {
    font-size: 16px;
  }
}

    </style>
    <style>
      .step {
        flex: 1;
        position: relative;
      }

      .circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: #dee2e6;
        color: #6c757d;
        line-height: 40px;
        margin: 0 auto;
        font-weight: bold;
      }

      .label {
        margin-top: 8px;
        font-size: 0.9rem;
      }

      .step.completed .circle {
        background-color: #198754; /* Bootstrap's green */
        color: white;
      }

      .step::after {
        content: "";
        position: absolute;
        top: 20px;
        right: -50%;
        width: 100%;
        height: 2px;
        background-color: #dee2e6;
        z-index: -1;
      }

      .step:last-child::after {
        display: none;
      }

      .step.completed::after {
        background-color: #198754;
      }
    </style>

    <style>
      .vertical-stepper {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        position: relative;

        height: 100%; /* Full height of parent */
      }

      .step-item {
        display: flex;
        align-items: flex-start;
        position: relative;
      }

      .step-marker {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #dee2e6;
        color: #6c757d;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        flex-shrink: 0;
        z-index: 1;
      }

      .step-details {
        margin-left: 1rem;
      }

      .step-title {
        margin-bottom: 0.25rem;
        font-weight: 600;
      }

      .step-item::before {
        content: "";
        position: absolute;
        top: 40px;
        left: 20px;
        width: 2px;
        height: calc(100% - 40px);
        background-color: #dee2e6;
        z-index: 0;
      }

      .step-item:last-child::before {
        display: none;
      }

      .step-item.completed .step-marker {
        background-color: #198754;
        color: #fff;
      }

      .step-item.completed::before {
        background-color: #198754;
      }

      
    </style>
  </head>
  <body id="page-top">
    <!-- Navigation-->
    <nav
      class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top"
      id="mainNav"
    >
      <div class="container px-4">
        <a class="navbar-brand" href="#page-top">Start Bootstrap</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarResponsive"
          aria-controls="navbarResponsive"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
          <ul class="navbar-nav ms-auto">
            <li class="nav-item">
              <a class="nav-link" href="/">Home</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <!-- Header-->
    <header class="bg-primary bg-gradient text-white">
      <div class="container px-4 text-center">
        <h1 class="fw-bolder">Welcome to Scrolling Nav</h1>
        <p class="lead">
          A functional Bootstrap 5 boilerplate for one page scrolling websites
        </p>
        <a class="btn btn-lg btn-light" href="#about">Start scrolling!</a>
      </div>
    </header>

    <!-- Steeper -->
    <div class="d-flex justify-content-between align-items-center mb-4 mt-4">
      <div class="step text-center completed">
        <div class="circle">1</div>
        <div class="label">Fill up Form Accordingly</div>
      </div>
      <div class="step text-center completed">
        <div class="circle">2</div>
        <div class="label">Pick up Suitable Ferry</div>
      </div>
      <div class="step text-center">
        <div class="circle">3</div>
        <div class="label">Make Payment and Recieve Ticket</div>
      </div>
    </div>
    <div class="container mt-4">
      <div class="contianer">
        <h3>Passengers Details</h3>
      </div>
      <br />

      <form id="passenger-form">
        <% for (let i = 1; i <= passengers; i++) { %>
        <div class="border p-3 mb-4 passenger-block" id="passenger-<%= i %>">
          <h5>Passenger <%= i %></h5>
          <div class="row g-3">
            <!-- Title -->
            <div class="col-md-2">
              <select class="form-select" name="title-<%= i %>" required>
                <option value="Mr">Mr</option>
                <option value="Mrs">Mrs</option>
                <option value="Ms">Ms</option>
              </select>
            </div>

            <!-- Full Name -->
            <div class="col-md-4">
              <input
                type="text"
                class="form-control"
                name="name-<%= i %>"
                placeholder="Full Name*"
                required
              />
            </div>

            <!-- Age -->
            <div class="col-md-2">
              <input
                type="number"
                class="form-control"
                name="age-<%= i %>"
                placeholder="Age*"
                required
              />
            </div>
            <!-- Age -->
            <div class="col-md-2">
              <input
                type="text"
                class="form-control"
                name="sex-<%= i %>"
                placeholder="Sex*"
                required
              />
            </div>

            <!-- Nationality -->
            <div class="col-md-4">
              <select
                class="form-select country-select"
                name="country-<%= i %>"
                data-index="<%= i %>"
                required
              >
                <option value="">Select Country</option>
                <option value="India">India</option>
                <option value="USA">USA</option>
                <option value="Canada">Canada</option>
                <option value="Germany">Germany</option>
                <option value="Japan">Japan</option>
                <!-- Add more countries if needed -->
              </select>
            </div>
          </div>

          <!-- Conditional passport fields -->
          <div
            class="row g-3 mt-3 passport-fields"
            id="passport-fields-<%= i %>"
            style="display: none"
          >
            <div class="col-md-6">
              <input
                type="text"
                class="form-control"
                name="passport-<%= i %>"
                placeholder="Passport Number*"
                required
              />
            </div>
            <div class="col-md-6">
              <input
                type="date"
                class="form-control"
                name="expiry-<%= i %>"
                placeholder="Expiration Date*"
                required
              />
            </div>
          </div>
        </div>
        <% } %>
      </form>

      <div class="contianer">
        <h3>Contact Detail</h3>
      </div>
      <br />

      <form id="contactForm" class="p-4 border rounded-4">
        <div class="row g-3">
          <!-- Billing Name -->
          <div class="col-md-6">
            <input
              type="text"
              class="form-control"
              placeholder="Billing Name*"
              name="billingName"
              required
            />
          </div>

          <!-- Email Address -->
          <div class="col-md-6">
            <input
              type="email"
              class="form-control"
              placeholder="Email Address*"
              name="email"
              required
            />
          </div>

          <!-- Primary Mobile Number -->
          <div class="col-md-2">
            <select class="form-select" name="primaryCode" required>
              <option selected>IN +91</option>
              <option>US +1</option>
              <option>UK +44</option>
              <!-- Add more as needed -->
            </select>
          </div>
          <div class="col-md-4">
            <input
              type="tel"
              class="form-control"
              placeholder="Mobile Number*"
              name="mobile"
              required
            />
          </div>

          <!-- Alternate Mobile Number -->
          <div class="col-md-2">
            <select class="form-select" name="altCode" required>
              <option selected>IN +91</option>
              <option>US +1</option>
              <option>UK +44</option>
              <!-- Add more as needed -->
            </select>
          </div>
          <div class="col-md-4">
            <input
              type="tel"
              class="form-control"
              placeholder="Alternate Mobile Number"
              name="alternateMobile"
              required
            />
          </div>
        </div>
      </form>
    </div>

    <!-- Steeper-->
    <div class="container py-5">
      <div class="row g-4">
        <!-- Stepper Column -->
        <div class="col-lg-6">
          <div class="vertical-stepper">
            <div class="step-item" id="bookStep">
              <div class="step-marker">1</div>
              <div class="step-details">
                <h5 class="step-title">Booking</h5>
                <p class="text-muted mb-0">
                  Select your route and enter passenger details.
                </p>
              </div>
            </div>

            <div class="step-item" id="paymentStep">
              <div class="step-marker">2</div>
              <div class="step-details">
                <h5 class="step-title">Payment</h5>
                <p class="text-muted mb-0">
                  Proceed to make your payment securely.
                </p>
              </div>
            </div>

            <div class="step-item" id="confirmStep">
              <div class="step-marker">3</div>
              <div class="step-details">
                <h5 class="step-title">Confirmation</h5>
                <p class="text-muted mb-0">
                  Receive your ticket and booking confirmation.
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Payment Column -->
        <div class="col-lg-6" id="paymentCol">
          <div class="border rounded p-4 h-100 shadow-sm">
            <h4 class="mb-3">Payment Summary</h4>
            <p class="mb-2">
              Ferry Route: <strong>Port Blair to Havelock</strong>
            </p>
            <p class="mb-2">Passengers: <strong>2 Adults</strong></p>
            <p class="mb-2">Date: <strong>20 May 2025</strong></p>
            <hr />
            <p class="mb-2">Subtotal: â‚¹4,000</p>
            <p class="mb-2">Taxes & Fees: â‚¹200</p>
            <hr />
            <h5>Total: â‚¹4,200</h5>
            <button
              class="btn btn-success mt-3 w-100"
              onclick=" triggerContactFormSubmit()"
            >
              Proceed to Pay
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer-->
    <footer class="py-5 bg-dark">
      <div class="container px-4">
        <p class="m-0 text-center text-white">
          Copyright &copy; Your Website 2023
        </p>
      </div>
    </footer>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="/js/scripts.js"></script>
    <script>
      document.querySelectorAll(".country-select").forEach((select) => {
        select.addEventListener("change", function () {
          const index = this.dataset.index;
          const passportDiv = document.getElementById(
            "passport-fields-" + index
          );

          if (this.value !== "India" && this.value !== "") {
            passportDiv.style.display = "flex";
          } else {
            passportDiv.style.display = "none";
          }
        });
      });
      console.log(window.location.href);
    </script>

    <script>
      function triggerContactFormSubmit() {
        const form = document.getElementById("contactForm");

        // Optional: You can perform validation or other logic here

        form.requestSubmit(); // Triggers form submission programmatically
      }
      document
        .getElementById("contactForm")
        .addEventListener("submit", function (e) {
          e.preventDefault(); // Prevent actual form submission

          const passengersData = {};
          const passengerBlocks = document.querySelectorAll(".passenger-block");

          passengerBlocks.forEach((block, index) => {
            const i = index + 1;
            const title = block.querySelector(
              `select[name="title-${i}"]`
            ).value;
            const name = block.querySelector(`input[name="name-${i}"]`).value;
            const age = block.querySelector(`input[name="age-${i}"]`).value;
            const sex = block.querySelector(`input[name="sex-${i}"]`).value;
            const country = block.querySelector(
              `select[name="country-${i}"]`
            ).value;
            const passportField = block.querySelector(
              `input[name="passport-${i}"]`
            );
            const expiryField = block.querySelector(
              `input[name="expiry-${i}"]`
            );

            passengersData[i] = {
              title: title,
              name: name,
              age: age,
              sex: sex,
              nationality:
                country === "India" ? "indian" : country.toLowerCase(),
              fcountry: country,
              fpassport: passportField ? passportField.value : "",
              fexpdate: expiryField ? expiryField.value : "",
            };
          });

          // Collect contact form data
          const contactForm = document.getElementById("contactForm");
          const contactName = contactForm.billingName.value;
          const contactEmail = contactForm.email.value;
          const primaryMobile = contactForm.mobile.value;
          const altMobile = contactForm.alternateMobile.value;

          const finalData = {
            data: {
              passenger: passengersData,
              c_name: contactName,
              c_mobile: primaryMobile,
              c_email: contactEmail,
              p_contact: altMobile,
            },
          };

          console.log(finalData); // Debug log

          // Send POST request
          fetch(window.location.href, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(finalData),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.status == "success") {
                console.log(data);
                document.getElementById("bookStep").classList.add("completed");

                // Step 1: Get existing bookings from localStorage
                let bookings =
                  JSON.parse(localStorage.getItem("bookings")) || [];

                // Step 2: Push the new booking into the array

                // Get the current path from the browser's address bar
                const path = window.location.pathname;

                // Split the path into parts
                const parts = path.split("/");

                // Example: /savePassengers/2/771/2025-05-20/22/1625
                // Index 0: ""         (before first slash)
                // Index 1: "savePassengers"
                // Index 2: "2"        <-- no_of_passenger
                // Index 3: "771"      <-- schedule_id
                // Index 4: "2025-05-20" <-- travel_date
                // Index 5: "22"       <-- class_id
                // Index 6: "1625"     <-- fare
                let no_of_passenger;
                if (parts.length >= 3 && parts[1] === "savePassengers") {
                  no_of_passenger = parseInt(parts[2]);
                  console.log("No. of passengers:", no_of_passenger);
                  console.log("schedule Id :", parts[3]);
                } else {
                  console.warn("URL structure is unexpected or invalid.");
                }
                data.data.data["no_of_passenger"] = no_of_passenger;
                bookings.push(data.data.data);

                // Step 3: Save the updated array back to localStorage
                localStorage.setItem("bookings", JSON.stringify(bookings));

                console.log("Booking added!");

                setTimeout(() => {
                  document
                    .getElementById("paymentStep")
                    .classList.add("completed");
                  confirmBooking(data.data.data.booking_id);
                }, 1000);
              } else {
                alert(data.message);
              }
            })
            .catch((error) => {
              console.error("Error submitting data:", error);
            });
        });

      function confirmBooking(booking_id) {
        fetch(`/confirmBooking/${booking_id}`, {
          method: "POST",
        })
          .then((response) => response.json())
          .then((result) => {
            if (result.status == "success") {
              // Step 1: Get all bookings from localStorage

              document.getElementById("confirmStep").classList.add("completed");

              const bookings =
                JSON.parse(localStorage.getItem("bookings")) || [];

              // Step 2: Find the index of the booking to update
              const index = bookings.findIndex(
                (item) => item.booking_id == booking_id
              );

              if (index !== -1) {
                // Step 3: Update the PNR
                bookings[index].pnr = result.data.data.pnr;

                localStorage.setItem("bookings", JSON.stringify(bookings));

                setTimeout(() => {
                  window.location.href = "/";
                }, 2000);
              } else {
                console.warn(
                  "Booking not found in localStorage for ID:",
                  booking_id
                );
              }
            } else {
              alert(result.message); // Show backend message
            }
          })
          .catch((error) => {
            console.error("Error confirming booking:", error);
            alert("Something went wrong while confirming your booking.");
          });
      }
    </script>

    <script>
      function appendPaymentCol() {
        const path = window.location.pathname;
        const parts = path.split("/");

        if (parts.length >= 7 && parts[1] === "savePassengers") {
          const no_of_passenger = parseInt(parts[2]);
          const schedule_id = parts[3];
          const travel_date = parts[4];
          const class_id = parts[5];
          const base_fare = parseFloat(parts[6]);

          const allSchedulesRaw = JSON.parse(localStorage.getItem("data"));
          const schedule = allSchedulesRaw.data.find(
            (data) => data.id == schedule_id
          );

          if (!schedule) {
            console.warn("Schedule not found for ID:", schedule_id);
            return;
          }

          const cgst = parseFloat(schedule.cgst_amount);
          const ugst = parseFloat(schedule.ugst_amount);
          const psf = parseFloat(schedule.psf);
          const taxPerPassenger = cgst + ugst;
          const totalPerPassenger = base_fare + taxPerPassenger + psf;
          const totalAmount = totalPerPassenger * no_of_passenger;

          // Clear existing payment col if any
          document.getElementById("paymentCol").innerHTML = "";

          const paymentHTML = `
      <div class="payment-summary border rounded shadow-sm">
  <h4 class="mb-3">Payment Summary</h4>
  <p class="mb-2">Ferry Route: <strong>${schedule.source_name} to ${schedule.destination_name}</strong></p>
  <p class="mb-2">Passengers: <strong>${no_of_passenger} Adult(s)</strong></p>
  <p class="mb-2">Date: <strong>${travel_date}</strong></p>
  <hr />
  
  <!-- Passenger Details (Collapsed by default) -->
  ${Array.from({ length: no_of_passenger })
    .map(
      (_, i) => `
    <div class="passenger-item">
      <p class="mb-1"><strong>Passenger ${i + 1}</strong></p>
      <div class="passenger-details">
        <p class="mb-1">Base Fare: â‚¹${base_fare.toFixed(2)}</p>
        <p class="mb-1">CGST (9%): â‚¹${cgst.toFixed(2)}</p>
        <p class="mb-1">UGST (9%): â‚¹${ugst.toFixed(2)}</p>
        <p class="mb-1">PSF: â‚¹${psf.toFixed(2)}</p>
        <strong>Total: â‚¹${totalPerPassenger.toFixed(2)}</strong>
      </div>
      <span class="expand-btn" onclick="toggleDetails(${i})">Show Details</span>
    </div>
  `).join("")}

  <hr />
  <h5 class="text-end">Grand Total: â‚¹${totalAmount.toFixed(2)}</h5>
  <button class="btn btn-success mt-3 w-100" onclick="triggerContactFormSubmit()">Proceed to Pay</button>
</div>

      `;

          document.getElementById("paymentCol").innerHTML = paymentHTML;
        } else {
          console.warn("Invalid URL structure for payment section");
        }
      }

      window.onload = () => {
        appendPaymentCol();
      };

      function toggleDetails(index) {
  const passengerItem = document.querySelectorAll('.passenger-item')[index];
  passengerItem.classList.toggle('active');
}

    </script>
  </body>
</html>
